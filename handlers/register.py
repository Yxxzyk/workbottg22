from aiogram import Bot
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from state.register import RegisterState
import re
import os
from utils.database import Database


async def start_register(message: Message, state: FSMContext, bot: Bot):
    db = Database(os.getenv("DATABASE_NAME"))
    users = db.select_user_id(message.from_user.id)
    if users:
        await bot.send_message(message.from_user.id, f"<b>{users.user_name}</b> \n<b>–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.</b> ")
    else:
        await bot.send_message(message.from_user.id, f"–î–∞–≤–∞–π—Ç–µ –ø—Ä–∏—Å—Ç—É–ø–∏–º –∫ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏\n –î–ª—è –Ω–∞—á–∞–ª–∞ —Å–∫–∞–∂–∏—Ç–µ –∫–∞–∫ –∫ –í–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è ?")
        await state.set_state(RegisterState.regName)


async def register_name(message: Message, state: FSMContext, bot: Bot):
    await bot.send_message(message.from_user.id, f"üòä–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è {message.text}\n"
                                                  f"–¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, —á—Ç–æ–±—ã —É–∑–Ω–∞–≤–∞—Ç—å –æ–± –∞–∫—Ü–∏—è—Ö –≤ –ø–µ—Ä–≤—ã—Ö —Ä—è–¥–∞—Ö\n"
                                                  f"üì±–§–æ—Ä–º–∞—Ç —Ç–µ–ª–µ—Ñ–æ–Ω–∞: +7-XXX-XXX-XX-XX, –¥–ª—è —É–ø—Ä–æ—â–µ–Ω–∏—è –≤–≤–æ–¥–∞ –º–æ–∂–µ—Ç–µ –±–µ–∑ —Ç–∏—Ä–µ –∏ —Å–ª–∏—Ç–Ω–æ\n"
                                                  f"‚ö†Ô∏è–í–Ω–∏–º–∞–Ω–∏–µ ! –Ø —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –∫ —Ñ–æ—Ä–º–∞—Ç—É.")
    await state.update_data(regname=message.text)
    await state.set_state(RegisterState.regPhone)


async def register_phone(message: Message, state: FSMContext, bot: Bot):
    if re.findall("^\+?[7][-\(]?\d{3}\)?-?\d{3}-?\d{2}-?\d{2}$", message.text):
        await state.update_data(regphone=message.text)
        await bot.send_message(message.from_user.id, "–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ –≤–∞—à email.")
        await state.set_state(RegisterState.regEmail)
    else:
        await bot.send_message(message.from_user.id, "–ù–æ–º–µ—Ä —É–∫–∞–∑–∞–Ω –≤ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ")


async def register_email(message: Message, state: FSMContext, bot: Bot):
    if re.match(r"[^@]+@[^@]+\.[^@]+", message.text):
        await state.update_data(regemail=message.text)
        reg_data = await state.get_data()
        reg_name = reg_data.get("regname")
        reg_phone = reg_data.get("regphone")
        reg_email = reg_data.get("regemail")
        msg = f"–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è {reg_name} \n\n –¢–µ–ª–µ—Ñ–æ–Ω - {reg_phone} \n\n Email - {reg_email}"
        await bot.send_message(message.from_user.id, msg)
        db = Database(os.getenv("DATABASE_NAME"))
        db.add_user(reg_name, reg_phone, message.from_user.id, reg_email)
        await state.clear()
    else:
        await bot.send_message(message.from_user.id, "Email —É–∫–∞–∑–∞–Ω –≤ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ")
